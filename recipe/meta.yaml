{% set owner = "KCL-BMEIS" %}
{% set name = "spectrumdevice" %}
{% set version = "1.1.0" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
    sha256: e59b0e24de6237721e2fc49ea77241422ed89db082e017386dff4c9cdc357842

  - url: https://github.com/{{ owner }}/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
    sha256: 036b9aa595862cad6062019139ed5870e0a673badcac3b0cc8fb33afe50d3f1e
    folder: test-data

build:
  number: 0
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - pip
    - python >=3.9
  run:
    - numpy >=1.21.4
    - python >=3.8

test:
  imports:
    - spectrum_gmbh
    - spectrumdevice
  requires:
    - pip
    - pytest ==7.4.3
  source_files:
    - test-data/src/tests
    - test-data/src/example_scripts
  commands:
    - pip check
    - pytest

about:
  home: https://github.com/KCL-BMEIS/spectrumdevice
  summary: A high-level, object-oriented Python library for controlling Spectrum Instrumentation digitisers
  description: |
    spectrumdevice is a high-level, object-oriented Python library for controlling Spectrum Instrumentation devices.
    It can connect to individual digitisers or StarHubs (e.g. the NetBox). The main module spectrumdevice provides
    two classes SpectrumDigitiserCard and SpectrumDigitiserStarHub for controlling and receiving data from individual
    digitisers and StarHubs respectively. Mock classes are also provided for testing software without drivers installed
    or hardware connected.The submodule spectrumdevice.settings provides Enums and Dataclasses wrapping the register values
    provided by the Spectrum API, to be used for configuring hardware and interpreting responses received from hardware.
  doc_url: https://kcl-bmeis.github.io/spectrumdevice/
  dev_url: https://github.com/KCL-BMEIS/spectrumdevice
  license: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - crnbaker
